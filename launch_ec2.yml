---
- hosts: local
  connection: local
  gather_facts: no
  vars:
          instance_type: t2.micro
          security_group: webservers_sg
          image: ami-026f33d38b6410e30
          keypair: my-wordpress
          region: ap-south-1
          count: 1
          vars_files:
                  - aws_keys.yml
  tasks:
          - name: Creating a security group
            ec2_group:
                    name: webservers_sg
                    description: The webservers security group
                    rules:
                            - proto: tcp
                              from_port: 22
                              to_port: 22
                              cidr_ip: 0.0.0.0/0
                            - proto: tcp
                              from_port: 80
                              to_port: 80
                              cidr_ip: 0.0.0.0/0
                            - proto: tcp
                              from_port: 443
                              to_port: 443
                              cidr_ip: 0.0.0.0/0
                    rules_egress:
                            - proto: all
                              cidr_ip: 0.0.0.0/0
          - name: Creating ec2 instance
            ec2:
                    instance_type: t2.micro
                    image: "{{ image }}"
                    group: webservers_sg
                    region: "{{ region }}"
                    wait: yes
                    key_name: "{{ keypair }}"
                            #    user_data: "{{ lookup('file', 'vagrant-provision.yml') }}"
                    instance_tags:
                            Name: Centos7
                            Role: LAMP Stack
            register: ec2
          - name: Add the newly created host so that we can further contact it
            add_host:
                    name: "{{ item.public_ip }}"
                    group: webservers
            with_items: "{{ ec2.instances }}"
            args:
                    tags:
                            Type: webserver
          - name: Wait for SSH to come up
            wait_for:
                    host: "{{ item.public_ip }}"
                    port: 22
                    state: started
            with_items: "{{ ec2.instances }}"

- hosts: webservers
  remote_user: centos
  become: yes
  gather_facts: no
  vars:
          mysql_port: 3306/tcp
          dbname: mywebdb
          dbpassword: mywebpassword 
          dbuser: mywebuser  
          mysqlservice: mysqld  
          httpd_port: 80 
          repository: https://github.com/rk280392/test-app.git 
  tasks:
          - name: Install necessary packages
            yum:
                    name:
                            - net-tools
                            - vim
                            - python3
          - name: Create a user
            user:
                    name: rajesh
                    state: present
                    # password enrypted using "mkpasswd --method=sha-512". you can use your username password.
                    password: $6$P5dO1ILccs$lymSE7eqaC56W4tOn8AXEHBJFKByR4ycVlKJzP7HVePAG5JdZUbF2XqpxL5DiwOrDz0qk8HgN/At9i7VjQfxq0 
                    shell: /bin/bash
                    system: yes
                    createhome: yes
          - name: Adding user into sudoers file
            lineinfile:
                    path: /etc/sudoers
                    insertafter: '^# User privilege'
                    line: rajesh ALL=(ALL:ALL) ALL
                    state: present
          - name: getting rsa of github
            shell: ssh-keyscan -t rsa github.com
            register: sshrsa
            # - debug: msg="{{ sshrsa }}"
          - name: Adding github.com into authorized_hosts
            lineinfile:
                    path: ~/.ssh/known_hosts
                    line: "{{ sshrsa.stdout }}"
                    state: present
                    create: yes
          - name: Change password authentication to yes
            replace:
                    path: /etc/ssh/sshd_config
                    regexp: 'PasswordAuthentication no'
                    replace: 'PasswordAuthentication yes'
          - name: Restarting sshd
            service:
                    name: sshd
                    state: restarted
          - name: Installing common dependency packages
            package:
                    name:
                            - libselinux-python
                            - libsemanage-python
                            - firewalld
                    state: present
          - name: Install MYSQL-python and mariadb
            package:
                    name:
                            - mariadb-server
                    state: present
          - name: Install MYSQL-python and mariadb
            package:
                    name:
                            - mariadb-server
                            - MySQL-python
                    state: present
          - name: Copying mysql confg files
            copy:
                    src: files/my.cnf
                    dest: /etc/my.cnf
          - name: starting mariadb service
            service:
                    name: mariadb
                    state: started
                    enabled: yes
          - name: Starting firewalld service
            service:
                    name: firewalld
                    state: started
                    enabled: yes
          - name: Adding firewall rule for mariadb
            firewalld:
                    port: "{{ mysql_port }}"
                    zone: public
                    permanent: yes
                    immediate: yes
                    state: enabled
          - name: Creating app database
            mysql_db:
                    name: "{{ dbname }}"
                    state: present
          - name: Creating database user
            mysql_user:
                    name: "{{ dbuser }}"
                    password: "{{ dbpassword }}"
                    priv: '*.*:ALL'
          - name: Copy database script
            copy:
                    src: files/db-load-script.sql
                    dest: /tmp/
          - name: Loading data into database
            shell: mysql -f < /tmp/db-load-script.sql
          - name: Installing web server
            package:
                    name:
                            - httpd
                            - php
                            - php-mysql
                            - git
                    state: present
          - name: Starting firewall service
            service:
                    name: firewalld
                    state: started
                    enabled: yes
          - name: Inserting firewall rule
            firewalld: port={{ httpd_port }}/tcp state=enabled permanent=yes immediate=yes
          - name: Set index.php as the default page
            tags: "Set index.php as the default page"
            replace:
                    path: /etc/httpd/conf/httpd.conf
                    regexp: 'DirectoryIndex index.html'
                    replace: 'DirectoryIndex index.php'
          - name: Restarting httpd service
            service: 
                    name: httpd
                    state: restarted
                    enabled: yes
          - name: Cleanining up workspace
            shell: rm -rf /var/www/html/*
          - name: Cloning git repo
            git:
                    repo: "{{ repository }}"
                    dest: /var/www/html 
                    force: yes
          - name: Copy index.php 
            copy:
                    src: files/index.php
                    dest: /var/www/html/index.php
